public class PlaywrightTargetLocator : ITargetLocator
{
    PlaywrightDriver driver;
    IFrame h;
    public PlaywrightTargetLocator(PlaywrightDriver driver, IFrame h)
    {
        this.driver = driver;
        this.h = h;
    }

    public IWebElement ActiveElement()
    {
        throw new NotImplementedException();
    }

    public IAlert Alert()
    {
        return new PwAlert(driver);
    }

    public IWebDriver DefaultContent()
    {
        

        return driver;
    }

    public IWebDriver Frame(int frameIndex)
    {
        return new PlaywrightWebDriver(
        return driver;
    }

    public IWebDriver Frame(string frameName)
    {
        driver.exec<string>(async Task<object> (PlaywrightDriver p) =>
        {

    

         
            return true;
        });
            
        return driver;
    }

    public IWebDriver Frame(IWebElement frameElement)
    {
        IFrame? f;
        
        var e = (PWebElement)frameElement;
    
        driver.frame = e.h.ContentFrameAsync();
        return driver;
    }

    public IWebDriver NewWindow(WindowType typeHint)
    {
        return driver;
    }

    public IWebDriver ParentFrame()
    {
        return driver;
    }

    public IWebDriver Window(string windowName)
    {
        return driver;
    }
}


